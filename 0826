Sub GenerateMyBatisServiceAndMapperFromSQL()
    Dim lines() As String
    Dim tableName As String
    Dim primaryKeyFields As Collection
    Dim interfaceFilePath As String
    Dim serviceFilePath As String
    Dim interfaceStream As Object
    Dim serviceStream As Object
    Dim selectMethodParams As String
    Dim fieldNames As Collection
    Dim fieldValues As String
    Dim updateSetClause As String
    Dim primaryKeyConditions As String
    Dim sqlContent As String
    Dim i As Integer
    Dim importStatements As Collection
    Dim tableNameLowerCase As String
    
    ' SQLファイルの内容を読み込む
    sqlContent = ReadSQLFile("C:\path\to\your\sqlfile.sql")
    
    ' サービスファイルの生成開始
    serviceFilePath = "C:\path\to\your\output\YourService.java"
    Set serviceStream = CreateObject("ADODB.Stream")
    serviceStream.Charset = "UTF-8"
    serviceStream.Open
    
    ' インポート文を管理するためのCollectionを用意
    Set importStatements = New Collection
    
    ' サービスファイルの先頭部分を記述
    serviceStream.WriteText "package YourNamespace;" & vbCrLf & vbCrLf
    
    ' 共通のインポート文
    serviceStream.WriteText "import java.util.List;" & vbCrLf
    serviceStream.WriteText "import org.springframework.beans.factory.annotation.Autowired;" & vbCrLf
    serviceStream.WriteText "import org.springframework.stereotype.Service;" & vbCrLf & vbCrLf
    
    ' 行ごとに処理
    lines = Split(sqlContent, vbCrLf)
    
    For i = LBound(lines) To UBound(lines)
        If InStr(lines(i), "CREATE TABLE") > 0 Then
            tableName = ExtractTableName(lines(i))
            tableNameLowerCase = LCase(tableName)
            Set primaryKeyFields = New Collection
            
            ' 次のセクションでPRIMARY KEYを探す
            Do While i < UBound(lines) And Not InStr(lines(i), ");") > 0
                If InStr(lines(i), "PRIMARY KEY") > 0 Then
                    primaryKeyFields = ExtractPrimaryKeyFields(lines(i))
                End If
                i = i + 1
            Loop
            
            ' フィールド名、値、UPDATE SET句、PRIMARY KEY条件を取得
            fieldNames = GetFieldNames(lines, tableName)
            fieldValues = GetFieldValues(fieldNames)
            updateSetClause = GetUpdateSetClause(fieldNames)
            primaryKeyConditions = GetPrimaryKeyCondition(primaryKeyFields)
            
            ' Mapperインターフェースファイルの生成開始
            interfaceFilePath = "C:\path\to\your\output\mappers\" & tableName & "Mapper.java"
            Set interfaceStream = CreateObject("ADODB.Stream")
            interfaceStream.Charset = "UTF-8"
            interfaceStream.Open
            
            ' Mapperインターフェースの内容を記述
            interfaceStream.WriteText "package YourNamespace.mappers;" & vbCrLf & vbCrLf
            interfaceStream.WriteText "import java.util.List;" & vbCrLf & vbCrLf
            interfaceStream.WriteText "public interface " & tableName & "Mapper {" & vbCrLf
            
            ' insertメソッド
            interfaceStream.WriteText "    void insert(" & tableName & " entity);" & vbCrLf
            
            ' selectByIdメソッド
            selectMethodParams = CreateMethodParams(primaryKeyFields)
            interfaceStream.WriteText "    " & tableName & " selectById(" & selectMethodParams & ");" & vbCrLf
            
            ' updateメソッド
            interfaceStream.WriteText "    void update(" & tableName & " entity);" & vbCrLf
            
            ' deleteByIdメソッド
            interfaceStream.WriteText "    void deleteById(" & selectMethodParams & ");" & vbCrLf
            
            interfaceStream.WriteText "}" & vbCrLf
            
            ' Mapperインターフェースファイルを保存して閉じる
            interfaceStream.SaveToFile interfaceFilePath, 2 ' 2 = adSaveCreateOverWrite
            interfaceStream.Close
            
            ' インポート文をCollectionに追加
            On Error Resume Next ' 重複を避けるためエラーを無視
            importStatements.Add "import YourNamespace.mappers." & tableName & "Mapper;", "Mapper_" & tableName
            importStatements.Add "import YourNamespace.entities." & tableName & ";", "Entity_" & tableName
            On Error GoTo 0
            
            ' サービスクラスの内容を記述
            serviceStream.WriteText "    @Autowired" & vbCrLf
            serviceStream.WriteText "    private " & tableName & "Mapper " & tableNameLowerCase & "Mapper;" & vbCrLf & vbCrLf
            
            ' insertメソッド
            serviceStream.WriteText "    public void insert" & tableName & "(" & tableName & " entity) {" & vbCrLf
            serviceStream.WriteText "        " & tableNameLowerCase & "Mapper.insert(entity);" & vbCrLf
            serviceStream.WriteText "    }" & vbCrLf & vbCrLf
            
            ' selectByIdメソッド
            serviceStream.WriteText "    public " & tableName & " get" & tableName & "ById(" & selectMethodParams & ") {" & vbCrLf
            serviceStream.WriteText "        return " & tableNameLowerCase & "Mapper.selectById(" & JoinPrimaryKeys(primaryKeyFields) & ");" & vbCrLf
            serviceStream.WriteText "    }" & vbCrLf & vbCrLf
            
            ' updateメソッド
            serviceStream.WriteText "    public void update" & tableName & "(" & tableName & " entity) {" & vbCrLf
            serviceStream.WriteText "        " & tableNameLowerCase & "Mapper.update(entity);" & vbCrLf
            serviceStream.WriteText "    }" & vbCrLf & vbCrLf
            
            ' deleteByIdメソッド
            serviceStream.WriteText "    public void delete" & tableName & "ById(" & selectMethodParams & ") {" & vbCrLf
            serviceStream.WriteText "        " & tableNameLowerCase & "Mapper.deleteById(" & JoinPrimaryKeys(primaryKeyFields) & ");" & vbCrLf
            serviceStream.WriteText "    }" & vbCrLf & vbCrLf
        End If
    Next i
    
    ' インポート文をサービスクラスの先頭に追加
    For i = 1 To importStatements.Count
        serviceStream.WriteText importStatements(i) & vbCrLf
    Next i
    
    ' サービスクラスの終了部分を記述
    serviceStream.WriteText vbCrLf & "}" & vbCrLf
    
    ' サービスファイルを保存して閉じる
    serviceStream.SaveToFile serviceFilePath, 2 ' 2 = adSaveCreateOverWrite
    serviceStream.Close
    
    MsgBox "MyBatis Mapperインターフェースとサービスクラスが生成されました。"
End Sub

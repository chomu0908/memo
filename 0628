はい、Angularのフォームコントロールに文字数制限を設け、現在の文字数を表示することができます。以下にその実装方法を示します。

TypeScriptのコードを更新して文字数制限を追加

app.component.tsを以下のように更新します。

typescript
コードをコピーする
import { Component, OnInit } from '@angular/core';
import { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';

export interface PeriodicElement {
  name: string;
  description: string;
}

const ELEMENT_DATA: PeriodicElement[] = [
  { name: 'Hydrogen', description: 'H' },
  { name: 'Helium', description: 'He' },
  // 他のデータ
];

@Component({
  selector: 'app-root',
  templateUrl: './app.component.html',
  styleUrls: ['./app.component.css']
})
export class AppComponent implements OnInit {
  displayedColumns: string[] = ['name', 'description'];
  dataSource = ELEMENT_DATA;
  form: FormGroup;
  maxLength = 20; // 文字数制限の設定

  constructor(private fb: FormBuilder) {
    this.form = this.fb.group({
      elements: this.fb.array([]) // FormArrayを初期化
    });
  }

  ngOnInit(): void {
    this.initializeForm();
  }

  get elements() {
    return this.form.get('elements') as FormArray; // FormArrayを取得
  }

  initializeForm() {
    this.dataSource.forEach((element) => {
      this.elements.push(this.fb.group({
        name: [element.name, [Validators.required, Validators.maxLength(this.maxLength)]],
        description: [element.description, [Validators.required, Validators.maxLength(this.maxLength)]]
      }));
    });
  }
}
HTMLのテンプレートを更新して文字数制限と現在の文字数を表示

app.component.htmlを以下のように更新します。

html
コードをコピーする
<form [formGroup]="form">
  <table mat-table [dataSource]="elements.controls" class="mat-elevation-z8">

    <!-- Column Definitions -->
    <ng-container matColumnDef="name">
      <th mat-header-cell *matHeaderCellDef> Name </th>
      <td mat-cell *matCellDef="let element; let i = index" [formGroupName]="i">
        <textarea matInput formControlName="name" maxlength="{{maxLength}}" #nameTextarea="ngModel"></textarea>
        <div *ngIf="elements.at(i).get('name').invalid && elements.at(i).get('name').touched">
          <span *ngIf="elements.at(i).get('name').errors?.required">Name is required</span>
          <span *ngIf="elements.at(i).get('name').errors?.maxlength">Name cannot exceed {{maxLength}} characters</span>
        </div>
        <div>
          {{ elements.at(i).get('name').value.length }} / {{ maxLength }} characters
        </div>
      </td>
    </ng-container>

    <ng-container matColumnDef="description">
      <th mat-header-cell *matHeaderCellDef> Description </th>
      <td mat-cell *matCellDef="let element; let i = index" [formGroupName]="i">
        <textarea matInput formControlName="description" maxlength="{{maxLength}}" #descriptionTextarea="ngModel"></textarea>
        <div *ngIf="elements.at(i).get('description').invalid && elements.at(i).get('description').touched">
          <span *ngIf="elements.at(i).get('description').errors?.required">Description is required</span>
          <span *ngIf="elements.at(i).get('description').errors?.maxlength">Description cannot exceed {{maxLength}} characters</span>
        </div>
        <div>
          {{ elements.at(i).get('description').value.length }} / {{ maxLength }} characters
        </div>
      </td>
    </ng-container>

    <!-- Header and Row Definitions -->
    <tr mat-header-row *matHeaderRowDef="displayedColumns"></tr>
    <tr mat-row *matRowDef="let row; columns: displayedColumns;"></tr>
  </table>
</form>
この設定により、各テキストエリアに文字数制限を設け、現在の文字数を表示することができます。maxlength属性を使用して文字数制限を設定し、現在の文字数を表示するために{{ elements.at(i).get('name').value.length }} / {{ maxLength }} charactersという形で表示しています。

各行のテキストエリアについて同様の設定を行い、バリデーションエラーのメッセージも表示することで、ユーザーに対してわかりやすくフィードバックを提供することができます。



